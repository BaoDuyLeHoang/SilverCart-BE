{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Freelance/.NET/BE_Insight_Project/FE-Chat/silvercart-chat/app/services/api.ts"],"sourcesContent":["import { Message, Conversation } from '../types';\r\nimport { ApiResponse, ConversationResponse } from '../types/index';\r\n\r\nconst API_BASE_URL = 'https://localhost:5001/api';\r\n\r\nexport const api = {\r\n  login: async (email: string, password: string) => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/auth/login`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || 'Login failed');\r\n      }\r\n      \r\n      const responseData = await response.json();\r\n      return responseData;\r\n    } catch (error) {\r\n      console.error('Login request failed:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Messages\r\n  getMessages: async (conversationId: string): Promise<ApiResponse<Message[]>> => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/Message/conversations?ConversationId=${conversationId}`, {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem('accessToken')}` },\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || 'Failed to get messages');\r\n      }\r\n      \r\n      return response.json();\r\n    } catch (error) {\r\n      console.error('Get messages failed:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  sendMessage: async (message: Partial<Message>): Promise<ApiResponse<Message>> => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/Message`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${localStorage.getItem('accessToken')}`,\r\n        },\r\n        body: JSON.stringify(message),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || 'Failed to send message');\r\n      }\r\n\r\n      return response.json();\r\n    } catch (error) {\r\n      console.error('Send message failed:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Conversations\r\n  getConversations: async (): Promise<ApiResponse<ConversationResponse>> => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/conversation?UserId=${localStorage.getItem('userId')}`, {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem('accessToken')}` },\r\n        method: 'GET',\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || 'Failed to get conversations');\r\n      }\r\n\r\n      return response.json();\r\n    } catch (error) {\r\n      console.error('Get conversations failed:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  createConversation: async (partnerEmail: string): Promise<ApiResponse<Conversation>> => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/conversation`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${localStorage.getItem('accessToken')}`,\r\n        },\r\n        body: JSON.stringify({\r\n          partnerEmail\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.text();\r\n        throw new Error(errorData || 'Failed to create conversation');\r\n      }\r\n\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Create conversation failed:', error);\r\n      throw error;\r\n    }\r\n  },\r\n}; "],"names":[],"mappings":";;;AAGA,MAAM,eAAe;AAEd,MAAM,MAAM;IACjB,OAAO,OAAO,OAAe;QAC3B,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,WAAW,CAAC,EAAE;gBACzD,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,MAAM,KAAK,SAAS,CAAC;oBAAE;oBAAO;gBAAS;YACzC;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,YAAY,MAAM,SAAS,IAAI;gBACrC,MAAM,IAAI,MAAM,UAAU,OAAO,IAAI;YACvC;YAEA,MAAM,eAAe,MAAM,SAAS,IAAI;YACxC,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,yBAAyB;YACvC,MAAM;QACR;IACF;IAEA,WAAW;IACX,aAAa,OAAO;QAClB,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,sCAAsC,EAAE,gBAAgB,EAAE;gBACrG,SAAS;oBAAE,eAAe,CAAC,OAAO,EAAE,aAAa,OAAO,CAAC,gBAAgB;gBAAC;YAC5E;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,YAAY,MAAM,SAAS,IAAI;gBACrC,MAAM,IAAI,MAAM,UAAU,OAAO,IAAI;YACvC;YAEA,OAAO,SAAS,IAAI;QACtB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,wBAAwB;YACtC,MAAM;QACR;IACF;IAEA,aAAa,OAAO;QAClB,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,QAAQ,CAAC,EAAE;gBACtD,QAAQ;gBACR,SAAS;oBACP,gBAAgB;oBAChB,eAAe,CAAC,OAAO,EAAE,aAAa,OAAO,CAAC,gBAAgB;gBAChE;gBACA,MAAM,KAAK,SAAS,CAAC;YACvB;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,YAAY,MAAM,SAAS,IAAI;gBACrC,MAAM,IAAI,MAAM,UAAU,OAAO,IAAI;YACvC;YAEA,OAAO,SAAS,IAAI;QACtB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,wBAAwB;YACtC,MAAM;QACR;IACF;IAEA,gBAAgB;IAChB,kBAAkB;QAChB,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,qBAAqB,EAAE,aAAa,OAAO,CAAC,WAAW,EAAE;gBACpG,SAAS;oBAAE,eAAe,CAAC,OAAO,EAAE,aAAa,OAAO,CAAC,gBAAgB;gBAAC;gBAC1E,QAAQ;YACV;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,YAAY,MAAM,SAAS,IAAI;gBACrC,MAAM,IAAI,MAAM,UAAU,OAAO,IAAI;YACvC;YAEA,OAAO,SAAS,IAAI;QACtB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,6BAA6B;YAC3C,MAAM;QACR;IACF;IAEA,oBAAoB,OAAO;QACzB,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,aAAa,CAAC,EAAE;gBAC3D,QAAQ;gBACR,SAAS;oBACP,gBAAgB;oBAChB,eAAe,CAAC,OAAO,EAAE,aAAa,OAAO,CAAC,gBAAgB;gBAChE;gBACA,MAAM,KAAK,SAAS,CAAC;oBACnB;gBACF;YACF;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,YAAY,MAAM,SAAS,IAAI;gBACrC,MAAM,IAAI,MAAM,aAAa;YAC/B;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,+BAA+B;YAC7C,MAAM;QACR;IACF;AACF"}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 125, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Freelance/.NET/BE_Insight_Project/FE-Chat/silvercart-chat/app/hooks/useAuth.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\nimport { api } from '../services/api';\r\nimport { User } from '../types';\r\n\r\nexport const useAuth = () => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    checkAuth();\r\n  }, []);\r\n\r\n  const checkAuth = async () => {\r\n    try {\r\n      const userId = localStorage.getItem('userId');\r\n      const role = localStorage.getItem('role');\r\n      \r\n      if (!userId || !role || userId === 'undefined' || role === 'undefined') {\r\n        throw new Error('No user ID or role found');\r\n      }\r\n      const token = localStorage.getItem('accessToken');\r\n      \r\n      if (!token) {\r\n        throw new Error('No token found');\r\n      }\r\n      \r\n      setUser({\r\n        id: userId,\r\n        role: role,\r\n      });\r\n      \r\n    } catch (error) {\r\n      console.error('Auth error:', error);\r\n      setUser(null);\r\n      localStorage.clear();\r\n      router.push('/login');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (email: string, password: string) => {\r\n    try {\r\n      const response = await api.login(email, password);\r\n      console.log('Login successful:', response);\r\n      \r\n      localStorage.setItem('accessToken', response.data.accessToken);\r\n      localStorage.setItem('userId', response.data.userId);\r\n      localStorage.setItem('role', response.data.role);\r\n\r\n      setUser({\r\n        id: response.userId,\r\n        role: response.role\r\n      });\r\n\r\n      console.log('Navigating to chat...');\r\n      router.push('/chat');\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('accessToken');\r\n    localStorage.removeItem('userId');\r\n    localStorage.removeItem('role');\r\n    setUser(null);\r\n    router.push('/login');\r\n  };\r\n\r\n  return {\r\n    user,\r\n    loading,\r\n    login,\r\n    logout,\r\n    isAuthenticated: !!user,\r\n  };\r\n}; "],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;;AAGO,MAAM,UAAU;;IACrB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;6BAAE;YACR;QACF;4BAAG,EAAE;IAEL,MAAM,YAAY;QAChB,IAAI;YACF,MAAM,SAAS,aAAa,OAAO,CAAC;YACpC,MAAM,OAAO,aAAa,OAAO,CAAC;YAElC,IAAI,CAAC,UAAU,CAAC,QAAQ,WAAW,eAAe,SAAS,aAAa;gBACtE,MAAM,IAAI,MAAM;YAClB;YACA,MAAM,QAAQ,aAAa,OAAO,CAAC;YAEnC,IAAI,CAAC,OAAO;gBACV,MAAM,IAAI,MAAM;YAClB;YAEA,QAAQ;gBACN,IAAI;gBACJ,MAAM;YACR;QAEF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,eAAe;YAC7B,QAAQ;YACR,aAAa,KAAK;YAClB,OAAO,IAAI,CAAC;QACd,SAAU;YACR,WAAW;QACb;IACF;IAEA,MAAM,QAAQ,OAAO,OAAe;QAClC,IAAI;YACF,MAAM,WAAW,MAAM,yHAAA,CAAA,MAAG,CAAC,KAAK,CAAC,OAAO;YACxC,QAAQ,GAAG,CAAC,qBAAqB;YAEjC,aAAa,OAAO,CAAC,eAAe,SAAS,IAAI,CAAC,WAAW;YAC7D,aAAa,OAAO,CAAC,UAAU,SAAS,IAAI,CAAC,MAAM;YACnD,aAAa,OAAO,CAAC,QAAQ,SAAS,IAAI,CAAC,IAAI;YAE/C,QAAQ;gBACN,IAAI,SAAS,MAAM;gBACnB,MAAM,SAAS,IAAI;YACrB;YAEA,QAAQ,GAAG,CAAC;YACZ,OAAO,IAAI,CAAC;QACd,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,gBAAgB;YAC9B,MAAM;QACR;IACF;IAEA,MAAM,SAAS;QACb,aAAa,UAAU,CAAC;QACxB,aAAa,UAAU,CAAC;QACxB,aAAa,UAAU,CAAC;QACxB,QAAQ;QACR,OAAO,IAAI,CAAC;IACd;IAEA,OAAO;QACL;QACA;QACA;QACA;QACA,iBAAiB,CAAC,CAAC;IACrB;AACF;GA3Ea;;QAGI,qIAAA,CAAA,YAAS"}},
    {"offset": {"line": 210, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 216, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Freelance/.NET/BE_Insight_Project/FE-Chat/silvercart-chat/app/services/chatService.ts"],"sourcesContent":["import * as signalR from '@microsoft/signalr';\r\n\r\nclass ChatService {\r\n  private static instance: ChatService;\r\n  private hubConnection: signalR.HubConnection | null = null;\r\n  private messageHandlers: Set<(message: any) => void> = new Set();\r\n  private connectionId: string | null = null;\r\n\r\n  private constructor() {}\r\n\r\n  public static getInstance(): ChatService {\r\n    if (!ChatService.instance) {\r\n      ChatService.instance = new ChatService();\r\n    }\r\n    return ChatService.instance;\r\n  }\r\n\r\n  public async startConnection(): Promise<string | null> {\r\n    if (this.hubConnection?.state === signalR.HubConnectionState.Connected && this.connectionId) {\r\n      return this.connectionId;\r\n    }\r\n\r\n    try {\r\n      const userId = localStorage.getItem('userId');\r\n      const token = localStorage.getItem('accessToken');\r\n      if (!userId || !token) {\r\n        throw new Error('User ID or token not found');\r\n      }\r\n\r\n      if (!this.hubConnection) {\r\n        this.hubConnection = new signalR.HubConnectionBuilder()\r\n          .withUrl(`https://localhost:5001/chatHub`, {\r\n            accessTokenFactory: () => token,\r\n            skipNegotiation: true,\r\n            transport: signalR.HttpTransportType.WebSockets,\r\n            withCredentials: false,\r\n          })\r\n          .configureLogging(signalR.LogLevel.Warning)\r\n          .withAutomaticReconnect()\r\n          .build();\r\n\r\n        this.setupMessageHandlers();\r\n      }\r\n\r\n      // Only start if disconnected\r\n      if (this.hubConnection.state === signalR.HubConnectionState.Disconnected) {\r\n        await this.hubConnection.start();\r\n\r\n        try {\r\n          const connId = await this.hubConnection.invoke<string>(\"GetConnectionId\");\r\n          this.connectionId = connId;\r\n          console.log('Connected to chat hub. ConnectionId:', connId);\r\n        } catch (err) {\r\n          console.warn('Failed to get connection ID from server', err);\r\n          this.connectionId = null;\r\n        }\r\n        \r\n        console.log('Connected to chat hub. ConnectionId:', this.connectionId);\r\n        return this.connectionId;\r\n      }\r\n\r\n      // Wait for connection if it's in the process of reconnecting\r\n      for (let i = 0; i < 5; i++) {\r\n        if (this.hubConnection.state === signalR.HubConnectionState.Connected) {\r\n          this.connectionId = this.hubConnection.connectionId || null;\r\n          return this.connectionId;\r\n        }\r\n        await new Promise(res => setTimeout(res, 500));\r\n      }\r\n\r\n      console.warn('Hub connection was not established after waiting.');\r\n      return this.connectionId;\r\n\r\n    } catch (error) {\r\n      console.error('Error starting chat connection:', error);\r\n      this.hubConnection = null;\r\n      this.connectionId = null;\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  private setupMessageHandlers() {\r\n    if (!this.hubConnection) return;\r\n\r\n    this.hubConnection.on(\"ReceiveMessage\", (message) => {\r\n      console.log(\"Received message:\", message);\r\n      this.messageHandlers.forEach((handler) => handler(message));\r\n    });\r\n    \r\n\r\n    this.hubConnection.onreconnecting((error) => {\r\n      console.log('Connection reconnecting...', error);\r\n    });\r\n\r\n    this.hubConnection.onreconnected((connectionId) => {\r\n      console.log('Connection reestablished. ConnectionId:', connectionId);\r\n      this.connectionId = connectionId || null;\r\n    });\r\n\r\n    this.hubConnection.onclose((error) => {\r\n      console.log('Connection closed:', error);\r\n      this.connectionId = null;\r\n    });\r\n  }\r\n\r\n  public async sendMessage(conversationId: string, content: string) {\r\n    if (!this.hubConnection || this.hubConnection.state !== signalR.HubConnectionState.Connected) {\r\n      await this.startConnection();\r\n    }\r\n\r\n    try {\r\n      await this.hubConnection?.invoke('SendMessage', conversationId, content);\r\n      console.log('Message sent successfully');\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  public async joinConversation(conversationId: string) {\r\n    if (!this.hubConnection || this.hubConnection.state !== signalR.HubConnectionState.Connected) {\r\n      await this.startConnection();\r\n    }\r\n\r\n    try {\r\n      await this.hubConnection?.invoke('JoinConversation', conversationId);\r\n      console.log(`Joined conversation: ${conversationId}`);\r\n    } catch (error) {\r\n      console.error('Error joining conversation:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  public async leaveConversation(conversationId: string) {\r\n    if (this.hubConnection?.state === signalR.HubConnectionState.Connected) {\r\n      try {\r\n        await this.hubConnection.invoke('LeaveConversation', conversationId);\r\n        console.log(`Left conversation: ${conversationId}`);\r\n      } catch (error) {\r\n        console.error('Error leaving conversation:', error);\r\n      }\r\n    }\r\n  }\r\n\r\n  public onMessage(handler: (message: any) => void): () => void {\r\n    this.messageHandlers.add(handler);\r\n    return () => {\r\n      this.messageHandlers.delete(handler);\r\n    };\r\n  }\r\n\r\n  public async stopConnection() {\r\n    try {\r\n      if (this.hubConnection?.state === signalR.HubConnectionState.Connected) {\r\n        await this.hubConnection.stop();\r\n        console.log('Disconnected from chat hub');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error stopping chat connection:', error);\r\n    } finally {\r\n      this.messageHandlers.clear();\r\n      this.hubConnection = null;\r\n      this.connectionId = null;\r\n    }\r\n  }\r\n\r\n  public getConnectionId(): string | null {\r\n    return this.connectionId;\r\n  }\r\n}\r\n\r\n// Export singleton instance\r\nexport const chatService = ChatService.getInstance();\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 363, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 369, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Freelance/.NET/BE_Insight_Project/FE-Chat/silvercart-chat/app/components/ChatMessage.tsx"],"sourcesContent":["import { Message } from '../types';\r\n\r\ninterface ChatMessageProps {\r\n  message: Message;\r\n  isOwnMessage: boolean;\r\n}\r\n\r\nexport const ChatMessage = ({ message, isOwnMessage }: ChatMessageProps) => {\r\n  const formatTime = (dateString: string | null) => {\r\n    if (!dateString) return '';\r\n    try {\r\n      const date = new Date(dateString);\r\n      return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n    } catch (error) {\r\n      console.error('Error formatting date:', error);\r\n      return '';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`flex ${\r\n        isOwnMessage ? 'justify-end' : 'justify-start'\r\n      }`}\r\n    >\r\n      <div\r\n        className={`max-w-[70%] rounded-lg p-3 ${\r\n          isOwnMessage\r\n            ? 'bg-blue-600 text-white'\r\n            : 'bg-white text-gray-800 shadow-sm'\r\n        }`}\r\n      >\r\n        <p className=\"text-base\">{message.content}</p>\r\n        <div className=\"flex items-center mt-1 space-x-2\">\r\n          <p className=\"text-xs opacity-70\">\r\n            {formatTime(message.creationDate)}\r\n          </p>\r\n          {message.isRead && isOwnMessage && (\r\n            <span className=\"text-xs opacity-70\">✓</span>\r\n          )}\r\n          {message.isModified && (\r\n            <span className=\"text-xs opacity-70\">(edited)</span>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}; "],"names":[],"mappings":";;;;;AAOO,MAAM,cAAc,CAAC,EAAE,OAAO,EAAE,YAAY,EAAoB;IACrE,MAAM,aAAa,CAAC;QAClB,IAAI,CAAC,YAAY,OAAO;QACxB,IAAI;YACF,MAAM,OAAO,IAAI,KAAK;YACtB,OAAO,KAAK,kBAAkB,CAAC,EAAE,EAAE;gBAAE,MAAM;gBAAW,QAAQ;YAAU;QAC1E,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,0BAA0B;YACxC,OAAO;QACT;IACF;IAEA,qBACE,6LAAC;QACC,WAAW,CAAC,KAAK,EACf,eAAe,gBAAgB,iBAC/B;kBAEF,cAAA,6LAAC;YACC,WAAW,CAAC,2BAA2B,EACrC,eACI,2BACA,oCACJ;;8BAEF,6LAAC;oBAAE,WAAU;8BAAa,QAAQ,OAAO;;;;;;8BACzC,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAE,WAAU;sCACV,WAAW,QAAQ,YAAY;;;;;;wBAEjC,QAAQ,MAAM,IAAI,8BACjB,6LAAC;4BAAK,WAAU;sCAAqB;;;;;;wBAEtC,QAAQ,UAAU,kBACjB,6LAAC;4BAAK,WAAU;sCAAqB;;;;;;;;;;;;;;;;;;;;;;;AAMjD;KAxCa"}},
    {"offset": {"line": 452, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 458, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Freelance/.NET/BE_Insight_Project/FE-Chat/silvercart-chat/app/components/ConversationList.tsx"],"sourcesContent":["import { Conversation } from '../types';\r\nimport { useState } from 'react';\r\nimport { api } from '../services/api';\r\n\r\ninterface ConversationListProps {\r\n  conversations: Conversation[];\r\n  selectedId: string;\r\n  onSelect: (id: string) => void;\r\n  onConversationCreated?: () => void;\r\n}\r\n\r\nexport const ConversationList = ({\r\n  conversations,\r\n  selectedId,\r\n  onSelect,\r\n  onConversationCreated,\r\n}: ConversationListProps) => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [partnerEmail, setPartnerEmail] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleCreateConversation = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!partnerEmail.trim()) {\r\n      setError('Please enter partner email');\r\n      return;\r\n    }\r\n    try {\r\n      setError('');\r\n      const response = await api.createConversation(partnerEmail);\r\n      if (response.statusCode === 200) {\r\n        setIsModalOpen(false);\r\n        setPartnerEmail('');\r\n        onConversationCreated?.();\r\n      } else {\r\n        setError('Failed to create conversation');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error creating conversation:', error);\r\n      setError('Failed to create conversation');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-1/4 bg-white border-r border-gray-200\">\r\n      <div className=\"p-4 border-b border-gray-200\">\r\n        <div className=\"flex justify-between items-center\">\r\n          <h2 className=\"text-xl font-semibold text-gray-800\">Conversations</h2>\r\n          <button\r\n            onClick={() => setIsModalOpen(true)}\r\n            className=\"bg-blue-500 text-white p-2 rounded-full hover:bg-blue-600\"\r\n          >\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n              <path fillRule=\"evenodd\" d=\"M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z\" clipRule=\"evenodd\" />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"overflow-y-auto h-[calc(100vh-4rem)]\">\r\n        {conversations.map((conv) => (\r\n          <div\r\n            key={conv.id}\r\n            onClick={() => onSelect(conv.id)}\r\n            className={`p-4 cursor-pointer hover:bg-gray-50 ${\r\n              selectedId === conv.id ? 'bg-blue-50' : ''\r\n            }`}\r\n          >\r\n            <div className=\"flex justify-between items-start\">\r\n              <div className=\"flex flex-col\">\r\n                <h3 className=\"font-medium text-gray-900\">{conv.name}</h3>\r\n                <p className=\"text-sm text-gray-600 truncate\">\r\n                  {conv.lastMessage}\r\n                </p>\r\n              </div>\r\n              {conv.unreadCount > 0 && (\r\n                <span className=\"bg-blue-500 text-white text-xs px-2 py-1 rounded-full\">\r\n                  {conv.unreadCount}\r\n                </span>\r\n              )}\r\n            </div>\r\n            <p className=\"text-xs text-gray-500 mt-1\">\r\n              {new Date(conv.lastMessageAt).toLocaleDateString()}\r\n            </p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {isModalOpen && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\r\n          <div className=\"bg-white p-6 rounded-lg w-96\">\r\n            <h3 className=\"text-lg font-semibold mb-4\">Create New Conversation</h3>\r\n            <form onSubmit={handleCreateConversation}>\r\n              {error && (\r\n                <div className=\"text-red-500 text-sm mb-2\">{error}</div>\r\n              )}\r\n              <input\r\n                type=\"email\"\r\n                value={partnerEmail}\r\n                onChange={(e) => setPartnerEmail(e.target.value)}\r\n                placeholder=\"Enter partner email\"\r\n                className=\"w-full p-2 border border-gray-300 rounded mb-4\"\r\n                required\r\n              />\r\n              <div className=\"flex justify-end gap-2\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => {\r\n                    setIsModalOpen(false);\r\n                    setError('');\r\n                    setPartnerEmail('');\r\n                  }}\r\n                  className=\"px-4 py-2 text-gray-600 hover:text-gray-800\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\r\n                >\r\n                  Create\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}; "],"names":[],"mappings":";;;;AACA;AACA;;;;;AASO,MAAM,mBAAmB,CAAC,EAC/B,aAAa,EACb,UAAU,EACV,QAAQ,EACR,qBAAqB,EACC;;IACtB,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,MAAM,2BAA2B,OAAO;QACtC,EAAE,cAAc;QAChB,IAAI,CAAC,aAAa,IAAI,IAAI;YACxB,SAAS;YACT;QACF;QACA,IAAI;YACF,SAAS;YACT,MAAM,WAAW,MAAM,yHAAA,CAAA,MAAG,CAAC,kBAAkB,CAAC;YAC9C,IAAI,SAAS,UAAU,KAAK,KAAK;gBAC/B,eAAe;gBACf,gBAAgB;gBAChB;YACF,OAAO;gBACL,SAAS;YACX;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,gCAAgC;YAC9C,SAAS;QACX;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAG,WAAU;sCAAsC;;;;;;sCACpD,6LAAC;4BACC,SAAS,IAAM,eAAe;4BAC9B,WAAU;sCAEV,cAAA,6LAAC;gCAAI,OAAM;gCAA6B,WAAU;gCAAU,SAAQ;gCAAY,MAAK;0CACnF,cAAA,6LAAC;oCAAK,UAAS;oCAAU,GAAE;oCAAwF,UAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAMpI,6LAAC;gBAAI,WAAU;0BACZ,cAAc,GAAG,CAAC,CAAC,qBAClB,6LAAC;wBAEC,SAAS,IAAM,SAAS,KAAK,EAAE;wBAC/B,WAAW,CAAC,oCAAoC,EAC9C,eAAe,KAAK,EAAE,GAAG,eAAe,IACxC;;0CAEF,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAG,WAAU;0DAA6B,KAAK,IAAI;;;;;;0DACpD,6LAAC;gDAAE,WAAU;0DACV,KAAK,WAAW;;;;;;;;;;;;oCAGpB,KAAK,WAAW,GAAG,mBAClB,6LAAC;wCAAK,WAAU;kDACb,KAAK,WAAW;;;;;;;;;;;;0CAIvB,6LAAC;gCAAE,WAAU;0CACV,IAAI,KAAK,KAAK,aAAa,EAAE,kBAAkB;;;;;;;uBApB7C,KAAK,EAAE;;;;;;;;;;YA0BjB,6BACC,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAG,WAAU;sCAA6B;;;;;;sCAC3C,6LAAC;4BAAK,UAAU;;gCACb,uBACC,6LAAC;oCAAI,WAAU;8CAA6B;;;;;;8CAE9C,6LAAC;oCACC,MAAK;oCACL,OAAO;oCACP,UAAU,CAAC,IAAM,gBAAgB,EAAE,MAAM,CAAC,KAAK;oCAC/C,aAAY;oCACZ,WAAU;oCACV,QAAQ;;;;;;8CAEV,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CACC,MAAK;4CACL,SAAS;gDACP,eAAe;gDACf,SAAS;gDACT,gBAAgB;4CAClB;4CACA,WAAU;sDACX;;;;;;sDAGD,6LAAC;4CACC,MAAK;4CACL,WAAU;sDACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUjB;GAtHa;KAAA"}},
    {"offset": {"line": 714, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 720, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Freelance/.NET/BE_Insight_Project/FE-Chat/silvercart-chat/app/chat/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { Message, Conversation } from '../types';\r\nimport { useAuth } from '../hooks/useAuth';\r\nimport { api } from '../services/api';\r\nimport { chatService } from '../services/chatService';\r\nimport { ChatMessage } from '../components/ChatMessage';\r\nimport { ConversationList } from '../components/ConversationList';\r\nimport { useRouter } from 'next/navigation';\r\n\r\nexport default function ChatPage() {\r\n  const router = useRouter();\r\n  const { user, loading, isAuthenticated } = useAuth();\r\n\r\n  const [messages, setMessages] = useState<Message[]>([]);\r\n  const [conversations, setConversations] = useState<Conversation[]>([]);\r\n  const [selectedConversation, setSelectedConversation] = useState<string>('');\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [isSending, setIsSending] = useState(false);\r\n  const [connectionState, setConnectionState] = useState<'connected' | 'connecting' | 'disconnected'>('connecting');\r\n\r\n  const messageSound = useRef(new Audio('/message.mp3'));\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n\r\n  // NEW: useRef giữ selectedConversation mới nhất\r\n  const selectedConversationRef = useRef(selectedConversation);\r\n  useEffect(() => {\r\n    selectedConversationRef.current = selectedConversation;\r\n  }, [selectedConversation]);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  const loadConversations = useCallback(async () => {\r\n    try {\r\n      const response = await api.getConversations();\r\n      const newConversations = response.data.conversations;\r\n\r\n      setConversations((prev) => {\r\n        if (JSON.stringify(prev) !== JSON.stringify(newConversations)) {\r\n          return newConversations;\r\n        }\r\n        return prev;\r\n      });\r\n\r\n      if (!selectedConversation && newConversations.length > 0) {\r\n        setSelectedConversation(newConversations[0].id);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading conversations:', error);\r\n    }\r\n  }, [selectedConversation]);\r\n\r\n  const loadMessages = useCallback(async (conversationId: string) => {\r\n    try {\r\n      const data = await api.getMessages(conversationId);\r\n      setMessages(data.data);\r\n      setTimeout(scrollToBottom, 100);\r\n    } catch (error) {\r\n      console.error('Error loading messages:', error);\r\n    }\r\n  }, []);\r\n\r\n  // CHANGED: handleNewMessage không dùng selectedConversation trực tiếp mà dùng ref\r\n  const handleNewMessage = useCallback(\r\n    async (message: Message) => {\r\n      if (message.conversationId === selectedConversationRef.current) {\r\n        setMessages((prev) => {\r\n          if (!prev.some((m) => m.id === message.id)) {\r\n            setTimeout(scrollToBottom, 100);\r\n            return [...prev, message];\r\n          }\r\n          return prev;\r\n        });\r\n\r\n        if (message.senderId !== localStorage.getItem('userId')) {\r\n          try {\r\n            await messageSound.current.play();\r\n          } catch (err) {\r\n            console.log('Error playing sound:', err);\r\n          }\r\n        }\r\n      }\r\n\r\n      await loadConversations();\r\n    },\r\n    [loadConversations]\r\n  );\r\n\r\n  // Khởi tạo chat + connection, effect này chỉ chạy 1 lần khi loading false & isAuthenticated true\r\n  useEffect(() => {\r\n    if (loading) return;\r\n    if (!isAuthenticated) {\r\n      router.push('/login');\r\n      return;\r\n    }\r\n\r\n    let unsubscribe: () => void;\r\n    \r\n    const initialize = async () => {\r\n      try {\r\n        setConnectionState('connecting');\r\n        await chatService.startConnection();\r\n        setConnectionState('connected');\r\n\r\n        unsubscribe = chatService.onMessage(handleNewMessage);\r\n        await loadConversations();\r\n      } catch (error) {\r\n        console.error('Error initializing chat:', error);\r\n        setConnectionState('disconnected');\r\n      }\r\n    };\r\n\r\n    void initialize();\r\n\r\n    return () => {\r\n      if (unsubscribe) unsubscribe();\r\n      void chatService.stopConnection();\r\n    };\r\n  }, [loading, isAuthenticated, handleNewMessage, loadConversations, router]);\r\n\r\n  useEffect(() => {\r\n    if (!selectedConversation) return;\r\n\r\n    let mounted = true;\r\n\r\n    const handleChange = async () => {\r\n      try {\r\n        if (mounted) {\r\n          await loadMessages(selectedConversation);\r\n          await chatService.joinConversation(selectedConversation);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error changing conversation:', error);\r\n      }\r\n    };\r\n\r\n    void handleChange();\r\n\r\n    return () => {\r\n      mounted = false;\r\n      void chatService.leaveConversation(selectedConversation);\r\n    };\r\n  }, [selectedConversation, loadMessages]);\r\n\r\n  const handleSendMessage = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!newMessage.trim() || !selectedConversation || isSending) return;\r\n  \r\n    try {\r\n      setIsSending(true);\r\n  \r\n      await chatService.sendMessage(selectedConversation, newMessage.trim());\r\n  \r\n      setNewMessage('');\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n    } finally {\r\n      setIsSending(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"flex items-center justify-center h-screen\">Loading...</div>;\r\n  }\r\n\r\n  if (!isAuthenticated) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex h-screen bg-gray-100\">\r\n      <ConversationList\r\n        conversations={conversations}\r\n        selectedId={selectedConversation}\r\n        onSelect={setSelectedConversation}\r\n        onConversationCreated={() => void loadConversations()}\r\n      />\r\n\r\n      <div className=\"flex-1 flex flex-col\">\r\n        <div className=\"bg-white shadow-sm p-4 border-b border-gray-200 flex justify-between items-center\">\r\n          <h1 className=\"text-xl font-bold text-gray-900\">\r\n            {conversations.find((c) => c.id === selectedConversation)?.name || 'Chat'}\r\n          </h1>\r\n          {connectionState !== 'connected' && (\r\n            <span className=\"text-sm text-gray-500 italic\">\r\n              {connectionState === 'connecting' ? 'Đang kết nối...' : 'Mất kết nối'}\r\n            </span>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"flex-1 overflow-y-auto p-4 space-y-4 bg-gray-50\">\r\n          {messages.map((message) => (\r\n            <ChatMessage\r\n              key={message.id}\r\n              message={message}\r\n              isOwnMessage={message.senderId === localStorage.getItem('userId')}\r\n            />\r\n          ))}\r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n\r\n        <form onSubmit={handleSendMessage} className=\"bg-white p-4 border-t border-gray-200\">\r\n          <div className=\"flex space-x-2\">\r\n            <input\r\n              type=\"text\"\r\n              value={newMessage}\r\n              onChange={(e) => setNewMessage(e.target.value)}\r\n              placeholder=\"Type your message...\"\r\n              className=\"flex-1 px-4 py-2 border border-gray-300 rounded-full focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n              disabled={isSending || connectionState !== 'connected'}\r\n            />\r\n            <button\r\n              type=\"submit\"\r\n              className={`${\r\n                isSending ? 'bg-blue-400' : 'bg-blue-600 hover:bg-blue-700'\r\n              } text-white px-6 py-2 rounded-full focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors`}\r\n              disabled={isSending || connectionState !== 'connected'}\r\n            >\r\n              {isSending ? 'Sending...' : 'Send'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1053, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}