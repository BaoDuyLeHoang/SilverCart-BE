{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Freelance/.NET/BE_Insight_Project/FE-Chat/silvercart-chat/app/services/api.ts"],"sourcesContent":["import { Message, Conversation, User } from '../types';\r\n\r\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'https://localhost:5001/api';\r\n\r\nexport const api = {\r\n  // Auth\r\n  login: async (email: string, password: string) => {\r\n    const response = await fetch(`${API_BASE_URL}/auth/login`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ email, password }),\r\n    });\r\n    return response.json();\r\n  },\r\n\r\n  // Messages\r\n  getMessages: async (conversationId: string): Promise<Message[]> => {\r\n    const response = await fetch(`${API_BASE_URL}/messages/${conversationId}`, {\r\n      headers: { Authorization: `Bearer ${localStorage.getItem('accessToken')}` },\r\n    });\r\n    return response.json();\r\n  },\r\n\r\n  sendMessage: async (message: Partial<Message>): Promise<Message> => {\r\n    const response = await fetch(`${API_BASE_URL}/messages`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${localStorage.getItem('accessToken')}`,\r\n      },\r\n      body: JSON.stringify(message),\r\n    });\r\n    return response.json();\r\n  },\r\n\r\n  // Conversations\r\n  getConversations: async (): Promise<Conversation[]> => {\r\n    const response = await fetch(`${API_BASE_URL}/conversations`, {\r\n      headers: { Authorization: `Bearer ${localStorage.getItem('accessToken')}` },\r\n    });\r\n    return response.json();\r\n  },\r\n}; "],"names":[],"mappings":";;;AAEA,MAAM,eAAe,QAAQ,GAAG,CAAC,mBAAmB,IAAI;AAEjD,MAAM,MAAM;IACjB,OAAO;IACP,OAAO,OAAO,OAAe;QAC3B,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,WAAW,CAAC,EAAE;YACzD,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;YAC9C,MAAM,KAAK,SAAS,CAAC;gBAAE;gBAAO;YAAS;QACzC;QACA,OAAO,SAAS,IAAI;IACtB;IAEA,WAAW;IACX,aAAa,OAAO;QAClB,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,UAAU,EAAE,gBAAgB,EAAE;YACzE,SAAS;gBAAE,eAAe,CAAC,OAAO,EAAE,aAAa,OAAO,CAAC,gBAAgB;YAAC;QAC5E;QACA,OAAO,SAAS,IAAI;IACtB;IAEA,aAAa,OAAO;QAClB,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,SAAS,CAAC,EAAE;YACvD,QAAQ;YACR,SAAS;gBACP,gBAAgB;gBAChB,eAAe,CAAC,OAAO,EAAE,aAAa,OAAO,CAAC,gBAAgB;YAChE;YACA,MAAM,KAAK,SAAS,CAAC;QACvB;QACA,OAAO,SAAS,IAAI;IACtB;IAEA,gBAAgB;IAChB,kBAAkB;QAChB,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,cAAc,CAAC,EAAE;YAC5D,SAAS;gBAAE,eAAe,CAAC,OAAO,EAAE,aAAa,OAAO,CAAC,gBAAgB;YAAC;QAC5E;QACA,OAAO,SAAS,IAAI;IACtB;AACF"}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 94, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Freelance/.NET/BE_Insight_Project/FE-Chat/silvercart-chat/app/hooks/useAuth.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\nimport { api } from '../services/api';\r\nimport { User } from '../types';\r\n\r\nexport const useAuth = () => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    checkAuth();\r\n  }, []);\r\n\r\n  const checkAuth = async () => {\r\n    try {\r\n      const userId = localStorage.getItem('userId');\r\n      const role = localStorage.getItem('role');\r\n      if (!userId || !role) {\r\n        throw new Error('No user ID or role found');\r\n      }\r\n      const token = localStorage.getItem('accessToken');\r\n      if (!token) {\r\n        throw new Error('No token found');\r\n      }\r\n    } catch (error) {\r\n      console.error('Auth error:', error);\r\n      router.push('/login');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (email: string, password: string) => {\r\n    try {\r\n      const response = await api.login(email, password);\r\n      localStorage.setItem('accessToken', response.token);\r\n      await checkAuth();\r\n      router.push('/chat');\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('accessToken');\r\n    setUser(null);\r\n    router.push('/login');\r\n  };\r\n\r\n  return {\r\n    user,\r\n    loading,\r\n    login,\r\n    logout,\r\n    isAuthenticated: !!user,\r\n  };\r\n}; "],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAGO,MAAM,UAAU;IACrB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;IACF,GAAG,EAAE;IAEL,MAAM,YAAY;QAChB,IAAI;YACF,MAAM,SAAS,aAAa,OAAO,CAAC;YACpC,MAAM,OAAO,aAAa,OAAO,CAAC;YAClC,IAAI,CAAC,UAAU,CAAC,MAAM;gBACpB,MAAM,IAAI,MAAM;YAClB;YACA,MAAM,QAAQ,aAAa,OAAO,CAAC;YACnC,IAAI,CAAC,OAAO;gBACV,MAAM,IAAI,MAAM;YAClB;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,eAAe;YAC7B,OAAO,IAAI,CAAC;QACd,SAAU;YACR,WAAW;QACb;IACF;IAEA,MAAM,QAAQ,OAAO,OAAe;QAClC,IAAI;YACF,MAAM,WAAW,MAAM,sHAAA,CAAA,MAAG,CAAC,KAAK,CAAC,OAAO;YACxC,aAAa,OAAO,CAAC,eAAe,SAAS,KAAK;YAClD,MAAM;YACN,OAAO,IAAI,CAAC;QACd,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,gBAAgB;YAC9B,MAAM;QACR;IACF;IAEA,MAAM,SAAS;QACb,aAAa,UAAU,CAAC;QACxB,QAAQ;QACR,OAAO,IAAI,CAAC;IACd;IAEA,OAAO;QACL;QACA;QACA;QACA;QACA,iBAAiB,CAAC,CAAC;IACrB;AACF"}},
    {"offset": {"line": 152, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Freelance/.NET/BE_Insight_Project/FE-Chat/silvercart-chat/app/components/ChatMessage.tsx"],"sourcesContent":["import { Message } from '../types';\r\n\r\ninterface ChatMessageProps {\r\n  message: Message;\r\n  isOwnMessage: boolean;\r\n}\r\n\r\nexport const ChatMessage = ({ message, isOwnMessage }: ChatMessageProps) => {\r\n  return (\r\n    <div\r\n      className={`flex ${\r\n        isOwnMessage ? 'justify-end' : 'justify-start'\r\n      }`}\r\n    >\r\n      <div\r\n        className={`max-w-[70%] rounded-lg p-3 ${\r\n          isOwnMessage\r\n            ? 'bg-blue-600 text-white'\r\n            : 'bg-white text-gray-800 shadow-sm'\r\n        }`}\r\n      >\r\n        <p className=\"text-base\">{message.content}</p>\r\n        <div className=\"flex items-center mt-1 space-x-2\">\r\n          <p className=\"text-xs opacity-70\">\r\n            {message.createdAt.toLocaleTimeString()}\r\n          </p>\r\n          {message.isRead && isOwnMessage && (\r\n            <span className=\"text-xs opacity-70\">âœ“</span>\r\n          )}\r\n          {message.isModified && (\r\n            <span className=\"text-xs opacity-70\">(edited)</span>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}; "],"names":[],"mappings":";;;;;AAOO,MAAM,cAAc,CAAC,EAAE,OAAO,EAAE,YAAY,EAAoB;IACrE,qBACE,8OAAC;QACC,WAAW,CAAC,KAAK,EACf,eAAe,gBAAgB,iBAC/B;kBAEF,cAAA,8OAAC;YACC,WAAW,CAAC,2BAA2B,EACrC,eACI,2BACA,oCACJ;;8BAEF,8OAAC;oBAAE,WAAU;8BAAa,QAAQ,OAAO;;;;;;8BACzC,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAE,WAAU;sCACV,QAAQ,SAAS,CAAC,kBAAkB;;;;;;wBAEtC,QAAQ,MAAM,IAAI,8BACjB,8OAAC;4BAAK,WAAU;sCAAqB;;;;;;wBAEtC,QAAQ,UAAU,kBACjB,8OAAC;4BAAK,WAAU;sCAAqB;;;;;;;;;;;;;;;;;;;;;;;AAMjD"}},
    {"offset": {"line": 222, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Freelance/.NET/BE_Insight_Project/FE-Chat/silvercart-chat/app/components/ConversationList.tsx"],"sourcesContent":["import { Conversation } from '../types';\r\n\r\ninterface ConversationListProps {\r\n  conversations: Conversation[];\r\n  selectedId: string;\r\n  onSelect: (id: string) => void;\r\n}\r\n\r\nexport const ConversationList = ({\r\n  conversations,\r\n  selectedId,\r\n  onSelect,\r\n}: ConversationListProps) => {\r\n  return (\r\n    <div className=\"w-1/4 bg-white border-r border-gray-200\">\r\n      <div className=\"p-4 border-b border-gray-200\">\r\n        <h2 className=\"text-xl font-semibold text-gray-800\">Conversations</h2>\r\n      </div>\r\n      <div className=\"overflow-y-auto h-[calc(100vh-4rem)]\">\r\n        {conversations.map((conv) => (\r\n          <div\r\n            key={conv.id}\r\n            onClick={() => onSelect(conv.id)}\r\n            className={`p-4 cursor-pointer hover:bg-gray-50 ${\r\n              selectedId === conv.id ? 'bg-blue-50' : ''\r\n            }`}\r\n          >\r\n            <div className=\"flex justify-between items-start\">\r\n              <div>\r\n                <h3 className=\"font-medium text-gray-900\">{conv.name}</h3>\r\n                <p className=\"text-sm text-gray-600 truncate\">\r\n                  {conv.lastMessage}\r\n                </p>\r\n              </div>\r\n              {conv.unreadCount > 0 && (\r\n                <span className=\"bg-blue-500 text-white text-xs px-2 py-1 rounded-full\">\r\n                  {conv.unreadCount}\r\n                </span>\r\n              )}\r\n            </div>\r\n            <p className=\"text-xs text-gray-500 mt-1\">\r\n              {conv.updatedAt.toLocaleDateString()}\r\n            </p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}; "],"names":[],"mappings":";;;;;AAQO,MAAM,mBAAmB,CAAC,EAC/B,aAAa,EACb,UAAU,EACV,QAAQ,EACc;IACtB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAG,WAAU;8BAAsC;;;;;;;;;;;0BAEtD,8OAAC;gBAAI,WAAU;0BACZ,cAAc,GAAG,CAAC,CAAC,qBAClB,8OAAC;wBAEC,SAAS,IAAM,SAAS,KAAK,EAAE;wBAC/B,WAAW,CAAC,oCAAoC,EAC9C,eAAe,KAAK,EAAE,GAAG,eAAe,IACxC;;0CAEF,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;;0DACC,8OAAC;gDAAG,WAAU;0DAA6B,KAAK,IAAI;;;;;;0DACpD,8OAAC;gDAAE,WAAU;0DACV,KAAK,WAAW;;;;;;;;;;;;oCAGpB,KAAK,WAAW,GAAG,mBAClB,8OAAC;wCAAK,WAAU;kDACb,KAAK,WAAW;;;;;;;;;;;;0CAIvB,8OAAC;gCAAE,WAAU;0CACV,KAAK,SAAS,CAAC,kBAAkB;;;;;;;uBApB/B,KAAK,EAAE;;;;;;;;;;;;;;;;AA2BxB"}},
    {"offset": {"line": 325, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 355, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Freelance/.NET/BE_Insight_Project/FE-Chat/silvercart-chat/app/chat/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { Message, Conversation } from '../types';\r\nimport { useAuth } from '../hooks/useAuth';\r\nimport { api } from '../services/api';\r\nimport { ChatMessage } from '../components/ChatMessage';\r\nimport { ConversationList } from '../components/ConversationList';\r\nimport router from 'next/router';\r\n\r\nexport default function ChatPage() {\r\n  const { user, loading, isAuthenticated } = useAuth();\r\n  const [messages, setMessages] = useState<Message[]>([]);\r\n  const [conversations, setConversations] = useState<Conversation[]>([]);\r\n  const [selectedConversation, setSelectedConversation] = useState<string>('');\r\n  const [newMessage, setNewMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      loadConversations();\r\n    } else {\r\n      router.push('/login');\r\n    }\r\n  }, [isAuthenticated]);\r\n\r\n  useEffect(() => {\r\n    if (selectedConversation) {\r\n      loadMessages(selectedConversation);\r\n    }\r\n  }, [selectedConversation]);\r\n\r\n  const loadConversations = async () => {\r\n    try {\r\n      const data = await api.getConversations();\r\n      setConversations(data);\r\n      if (data.length > 0 && !selectedConversation) {\r\n        setSelectedConversation(data[0].id);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading conversations:', error);\r\n    }\r\n  };\r\n\r\n  const loadMessages = async (conversationId: string) => {\r\n    try {\r\n      const data = await api.getMessages(conversationId);\r\n      setMessages(data);\r\n    } catch (error) {\r\n      console.error('Error loading messages:', error);\r\n    }\r\n  };\r\n\r\n  const handleSendMessage = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!newMessage.trim() || !selectedConversation) return;\r\n\r\n    try {\r\n      const message: Partial<Message> = {\r\n        conversationId: selectedConversation,\r\n        content: newMessage,\r\n        sender: localStorage.getItem('userId') || '',\r\n        isRead: true,\r\n        isModified: false,\r\n        isDeleted: false,\r\n      };\r\n\r\n      const sentMessage = await api.sendMessage(message);\r\n      setMessages(prev => [...prev, sentMessage]);\r\n      setNewMessage('');\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"flex items-center justify-center h-screen\">Loading...</div>;\r\n  }\r\n\r\n  if (!isAuthenticated) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex h-screen bg-gray-100\">\r\n      <ConversationList\r\n        conversations={conversations}\r\n        selectedId={selectedConversation}\r\n        onSelect={setSelectedConversation}\r\n      />\r\n\r\n      <div className=\"flex-1 flex flex-col\">\r\n        <div className=\"bg-white shadow-sm p-4 border-b border-gray-200\">\r\n          <h1 className=\"text-xl font-bold text-gray-900\">\r\n            {conversations.find(c => c.id === selectedConversation)?.name}\r\n          </h1>\r\n        </div>\r\n\r\n        <div className=\"flex-1 overflow-y-auto p-4 space-y-4 bg-gray-50\">\r\n          {messages.map((message) => (\r\n            <ChatMessage\r\n              key={message.id}\r\n              message={message}\r\n              isOwnMessage={message.sender === 'user1'} // TODO: Use actual user ID\r\n            />\r\n          ))}\r\n        </div>\r\n\r\n        <form onSubmit={handleSendMessage} className=\"bg-white p-4 border-t border-gray-200\">\r\n          <div className=\"flex space-x-2\">\r\n            <input\r\n              type=\"text\"\r\n              value={newMessage}\r\n              onChange={(e) => setNewMessage(e.target.value)}\r\n              placeholder=\"Type your message...\"\r\n              className=\"flex-1 px-4 py-2 border border-gray-300 rounded-full focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n            />\r\n            <button\r\n              type=\"submit\"\r\n              className=\"bg-blue-600 text-white px-6 py-2 rounded-full hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors\"\r\n            >\r\n              Send\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 544, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}